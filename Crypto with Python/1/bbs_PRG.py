p=47594413156497939774340994283550048840688488242969865159276580544929494863550755573316394522402966429847272276039179489269980983216818316509407398362978252173212056233296151564211275319142492039749272697440836635344872632023857992906833394646249688931232316612689921265374277415939310548705974724175331461007
q=138008950328530529190350625075983949925317070676877808502533661424421171059599799097272318660734726419658211399151090102042825946816125091475049834205880100935356008485600209418430413056534350786749091131754177385564517677071502413750920791205069136358678033970543851527099169376010496560485641549039871102287

M = p*q
def generate_key(seed, num_bytes):
    n = seed%M
    result = b''
    for i in range(num_bytes):
        n = (n*n)%M
        result += n.to_bytes(n.bit_length()//8 + 1, 'little')[0].to_bytes(1, 'little')
    return result
